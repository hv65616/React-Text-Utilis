{"version":3,"sources":["Components/NavBar.js","Components/TextForm.js","Components/Alert.js","App.js","index.js"],"names":["NavBar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","modeText","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","newtext","toUpperCase","showAlert","toLowerCase","split","index","length","join","defaultProps","about","Alert","alert","role","word","lower","charAt","slice","capatalize","msg","App","setMode","setModeText","setAlert","message","setTimeout","cls","console","log","document","body","ReactDOM","render","getElementById"],"mappings":"6MAGe,SAASA,EAAOC,GAC7B,OACE,sBACEC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MADtE,UAGE,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SACGH,EAAMI,QAET,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SAIE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,2BA6CR,sBACEF,UAAS,sCACQ,UAAfD,EAAME,KAAmB,OAAS,SAFtC,UAKE,uBACED,UAAU,mBACVI,KAAK,WACLC,GAAG,yBACHC,QAAS,WACPP,EAAMQ,WAAW,SAGrB,uBAAOP,UAAU,mBAAmBQ,QAAQ,yBAA5C,SACGT,EAAMU,iBCtFF,SAASC,EAASX,GAC/B,IA2BA,EAAwBY,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,qCACE,sBACEb,UAAU,YACVc,MAAO,CACLC,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,QAH7C,UAME,4DACA,sBAAKD,UAAU,OAAf,UACE,uBAAOQ,QAAQ,8BAA8BR,UAAU,aAAvD,SACGD,EAAMiB,UAET,0BACEhB,UAAU,eACVK,GAAG,8BACHY,KAAK,IACLC,MAAON,EACPO,SAvBa,SAACC,GAEtBP,EAAQO,EAAMC,OAAOH,QAsBbJ,MAAO,CACLQ,gBAAgC,SAAfvB,EAAME,KAAkB,OAAS,QAClDc,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,aAI/C,wBAAQD,UAAU,uBAAuBM,QArDvB,WACtB,IAAIiB,EAAUX,EAAKY,cACnBX,EAAQU,GACRxB,EAAM0B,UAAU,yBAA0B,YAkDtC,kCAGA,wBAAQzB,UAAU,uBAAuBM,QAnDvB,WACtB,IAAIiB,EAAUX,EAAKc,cACnBb,EAAQU,GACRxB,EAAM0B,UAAU,yBAA0B,YAgDtC,kCAGA,wBACEzB,UAAU,uBACVM,QA9CsB,WAE5B,IADA,IAAIiB,EAAUX,EAAKc,cAAcC,MAAM,IAC9BC,EAAQ,EAAGA,EAAQL,EAAQM,OAAQD,GAAS,EACnDL,EAAQK,GAASL,EAAQK,GAAOJ,cAElCX,EAAQU,EAAQO,KAAK,KACrB/B,EAAM0B,UAAU,+BAAgC,YAsC5C,yCAMA,wBAAQzB,UAAU,uBAAuBM,QAvDvB,WAEtBO,EADc,IAEdd,EAAM0B,UAAU,kBAAmB,YAoD/B,2BAIF,sBACEzB,UAAU,iBACVc,MAAO,CACLC,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,QAH7C,UAME,mDACA,8BACGW,EAAKe,MAAM,KAAKE,OADnB,cACsCjB,EAAKiB,OAD3C,uBAGA,mDACA,4BACGjB,EAAKiB,OAAS,EAAIjB,EAAO,gDDcpCd,EAAOiC,aAAe,CAAE5B,MAAO,iBAAkB6B,MAAO,qBE7EzCC,MAnBf,SAAelC,GAKb,OACEA,EAAMmC,OACJ,qBACElC,UAAS,sBAAiBD,EAAMmC,MAAM9B,KAA7B,gCACT+B,KAAK,QAFP,SAIE,mCAVa,SAACC,GAClB,IAAMC,EAAQD,EAAKV,cACnB,OAAOW,EAAMC,OAAO,GAAGd,cAAgBa,EAAME,MAAM,GAS5CC,CAAWzC,EAAMmC,MAAM9B,MAD1B,MACoCL,EAAMmC,MAAMO,UCkEzCC,MAzEf,WACE,MAAwB/B,mBAAS,SAAjC,mBAAOV,EAAP,KAAa0C,EAAb,KAEA,EAAgChC,mBAAS,aAAzC,mBAAOF,EAAP,KAAiBmC,EAAjB,KAEA,EAA0BjC,mBAAS,MAAnC,mBAAOuB,EAAP,KAAcW,EAAd,KA8BMpB,EAAY,SAACqB,EAAS1C,GAC1ByC,EAAS,CACPJ,IAAKK,EACL1C,KAAMA,IAER2C,YAAW,WACTF,EAAS,QACR,MAEL,OACE,qCAEI,cAAC/C,EAAD,CACEK,MAAM,cACNF,KAAMA,EACNM,WAlCW,SAACyC,GAGL,UAAT/C,GACFgD,QAAQC,IAAIF,GACZL,EAAQ,QACRC,EAAY,YACZO,SAASC,KAAKtC,MAAMQ,gBAAkB,OACtCG,EAAU,uBAAwB,WAClC0B,SAAShD,MAAQ,2BAEjBwC,EAAQ,SACRC,EAAY,aACZO,SAASC,KAAKtC,MAAMQ,gBAAkB,QACtCG,EAAU,wBAAyB,WACnC0B,SAAShD,MAAQ,4BAoBbM,SAAUA,IAEZ,cAAC,EAAD,CAAOyB,MAAOA,IACd,qBAAKlC,UAAU,iBAAf,SAMM,cAACU,EAAD,CACEM,QAAQ,yBACRf,KAAMA,EACNwB,UAAWA,UCjE3B4B,IAASC,OAAO,cAAC,EAAD,IAASH,SAASI,eAAe,U","file":"static/js/main.a8ea1362.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\nexport default function NavBar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                AboutUs\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ******Code to add color pallete in navigation bar*******\r\n      <div className=\"d-flex\">\r\n        <div\r\n          className=\"bg-primary rounded mx-2\"\r\n          style={{ height: \"20px\", width: \"20px\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            props.toggleMode(\"primary\");\r\n          }}\r\n        ></div>\r\n        <div\r\n          className=\"bg-danger rounded mx-2\"\r\n          style={{ height: \"20px\", width: \"20px\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            props.toggleMode(\"danger\");\r\n          }}\r\n        ></div>\r\n        <div\r\n          className=\"bg-warning rounded mx-2\"\r\n          style={{ height: \"20px\", width: \"20px\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            props.toggleMode(\"warning\");\r\n          }}\r\n        ></div>\r\n        <div\r\n          className=\"bg-info rounded mx-2\"\r\n          style={{ height: \"20px\", width: \"20px\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            props.toggleMode(\"info\");\r\n          }}\r\n        ></div>\r\n      </div> */}\r\n\r\n      <div\r\n        className={`form-check form-switch text-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        }`}\r\n      >\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          id=\"flexSwitchCheckDefault\"\r\n          onClick={() => {\r\n            props.toggleMode(null);\r\n          }}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n          {props.modeText}\r\n        </label>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\nNavBar.defaultProps = { title: \"Set Title Here\", about: \"About Text-Utilis\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpperCase = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted To UpperCase\", \"success\");\r\n  };\r\n  const handleLowerCase = () => {\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Converted To LowerCase\", \"success\");\r\n  };\r\n  const handleClearCase = () => {\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    props.showAlert(\"TextBox Cleared\", \"success\");\r\n  };\r\n  const handleAlternatingCase = () => {\r\n    let newtext = text.toLowerCase().split(\"\");\r\n    for (let index = 0; index < newtext.length; index += 2) {\r\n      newtext[index] = newtext[index].toUpperCase();\r\n    }\r\n    setText(newtext.join(\"\"));\r\n    props.showAlert(\"Converted To AlternatingCase\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"OnChange\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"grey\",\r\n        }}\r\n      >\r\n        <h1>Enter Your Text To Analyse</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            {props.heading}\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"grey\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpperCase}>\r\n          Convert To UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLowerCase}>\r\n          Convert To LowerCase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          onClick={handleAlternatingCase}\r\n        >\r\n          Convert to AlTeRnAtInG Case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearCase}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"grey\",\r\n        }}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters here.\r\n        </p>\r\n        <h3>Your Text Preview</h3>\r\n        <p>\r\n          {text.length > 0 ? text : \"Enter Something To Preview It Here :)\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capatalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>\r\n          {capatalize(props.alert.type)} : {props.alert.msg}\r\n        </strong>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from \"./Components/About\";\nimport NavBar from \"./Components/NavBar\";\nimport TextForm from \"./Components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [modeText, setModeText] = useState(\"LightMode\");\n\n  const [alert, setAlert] = useState(null);\n\n  // const removeBackgroundColor = () => {\n  //   document.body.classList.remove(\"bg-light\");\n  //   document.body.classList.remove(\"bg-dark\");\n  //   document.body.classList.remove(\"bg-danger\");\n  //   document.body.classList.remove(\"bg-warning\");\n  //   document.body.classList.remove(\"bg-primary\");\n  //   document.body.classList.remove(\"bg-info\");\n  // };\n\n  const toggleMode = (cls) => {\n    // removeBackgroundColor();\n    // document.body.classList.add(\"bg-\" + cls);\n    if (mode === \"light\") {\n      console.log(cls);\n      setMode(\"dark\");\n      setModeText(\"DarkMode\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark Mode Is Enabled\", \"success\");\n      document.title = \"Text-Utilis: Dark-Mode\";\n    } else {\n      setMode(\"light\");\n      setModeText(\"LightMode\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Is Enabled\", \"success\");\n      document.title = \"Text-Utilis: Light-Mode\";\n    }\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <NavBar\n          title=\"Text-Utilis\"\n          mode={mode}\n          toggleMode={toggleMode}\n          modeText={modeText}\n        ></NavBar>\n        <Alert alert={alert}></Alert>\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About></About>\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                heading=\"Enter your text here:-\"\n                mode={mode}\n                showAlert={showAlert}\n              ></TextForm>\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}